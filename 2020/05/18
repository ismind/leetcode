5. Longest Palindromic Substring

//这题的核心思想就是，定义一个指针A，然后将指针分为left和right，向两边移动，如果符合条件继续移动，否则终止；
//然后指针A往前移，继续分为left和right，向两边移动，如果符合条件继续移动，否则终止；
//以此类推

//https://leetcode.com/problems/longest-palindromic-substring/discuss/2928/Very-simple-clean-java-solution
public class Solution {
private int lo, maxLen;

public String longestPalindrome(String s) {
	int len = s.length();
	if (len < 2)
		return s;
	
    for (int i = 0; i < len-1; i++) {
     	extendPalindrome(s, i, i);  //assume odd length, try to extend Palindrome as possible
     	extendPalindrome(s, i, i+1); //assume even length.
    }
    return s.substring(lo, lo + maxLen);
}

private void extendPalindrome(String s, int j, int k) {
	while (j >= 0 && k < s.length() && s.charAt(j) == s.charAt(k)) {
		j--;
		k++;
	}
	if (maxLen < k - j - 1) {
		lo = j + 1;
		maxLen = k - j - 1;
	}
}}
